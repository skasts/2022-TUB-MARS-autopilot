slam_toolbox:
    ros__parameters:
        # Plugin params
        solver_plugin: solver_plugins::CeresSolver
        ceres_linear_solver: SPARSE_NORMAL_CHOLESKY
        ceres_preconditioner: SCHUR_JACOBI
        ceres_trust_strategy: LEVENBERG_MARQUARDT
        ceres_dogleg_type: TRADITIONAL_DOGLEG
        ceres_loss_function: None

        # ROS Parameters
        odom_frame: odom
        map_frame: map
        base_frame: base_footprint
        scan_topic: /scan

        # map_file_name: ''
        # use_map_file: true
        # map_start_at_dock: false
        # map_start_pose: [0.0,0.0,0.0]

        debug_logging: true
        throttle_scans: 1
        transform_publish_period: 0.025 #if 0 never publishes odometry
        map_update_interval: 0.5
        resolution: 0.03
        max_laser_range: 10.0 #for rastering images
        minimum_time_interval: 0.01
        transform_timeout: 0.5
        tf_buffer_duration: 30.0
        stack_size_to_use: 40000000 #// program needs a larger stack size to serialize large maps
        enable_interactive_mode: false

        # General Parameters
        use_scan_matching: true
        use_scan_barycenter: true
        minimum_travel_distance: 0.1
        minimum_travel_heading: 0.57
        scan_buffer_size: 10
        scan_buffer_maximum_scan_distance: 0.05
        link_match_minimum_response_fine: 0.1
        link_scan_maximum_distance: 0.25
        loop_search_maximum_distance: 3.0
        do_loop_closing: true
        loop_match_minimum_chain_size: 10
        loop_match_maximum_variance_coarse: 3.0
        loop_match_minimum_response_coarse: 0.35
        loop_match_minimum_response_fine: 0.45

        # Correlation Parameters - Correlation Parameters
        correlation_search_space_dimension: 0.5
        correlation_search_space_resolution: 0.01
        correlation_search_space_smear_deviation: 0.1

        # Correlation Parameters - Loop Closure Parameters
        loop_search_space_dimension: 8.0
        loop_search_space_resolution: 0.05
        loop_search_space_smear_deviation: 0.03

        # Scan Matcher Parameters
        distance_variance_penalty: 0.5
        angle_variance_penalty: 1.0

        fine_search_angle_offset: 0.00349
        coarse_search_angle_offset: 0.349
        coarse_angle_resolution: 0.0349
        minimum_angle_penalty: 0.9
        minimum_distance_penalty: 0.5
        use_response_expansion: true

        use_sim_time: True
        mode: mapping #localization

bt_navigator:
    ros__parameters:
        use_sim_time: True
        global_frame: map
        robot_base_frame: base_footprint
        odom_topic: /odom
        enable_groot_monitoring: True
        groot_zmq_publisher_port: 1666
        groot_zmq_server_port: 1667
        default_bt_xml_filename: "navigate_w_replanning_and_recovery.xml"
        plugin_lib_names:
            - nav2_compute_path_to_pose_action_bt_node
            - nav2_follow_path_action_bt_node
            - nav2_back_up_action_bt_node
            - nav2_spin_action_bt_node
            - nav2_wait_action_bt_node
            - nav2_clear_costmap_service_bt_node
            - nav2_is_stuck_condition_bt_node
            - nav2_goal_reached_condition_bt_node
            - nav2_goal_updated_condition_bt_node
            - nav2_initial_pose_received_condition_bt_node
            - nav2_reinitialize_global_localization_service_bt_node
            - nav2_rate_controller_bt_node
            - nav2_distance_controller_bt_node
            - nav2_speed_controller_bt_node
            - nav2_truncate_path_action_bt_node
            - nav2_goal_updater_node_bt_node
            - nav2_recovery_node_bt_node
            - nav2_pipeline_sequence_bt_node
            - nav2_round_robin_node_bt_node
            - nav2_transform_available_condition_bt_node
            - nav2_time_expired_condition_bt_node
            - nav2_distance_traveled_condition_bt_node

bt_navigator_rclcpp_node:
    ros__parameters:
        use_sim_time: True

controller_server:
    ros__parameters:
        use_sim_time: True
        controller_frequency: 10.0 # Nav2 default is 20.0
        min_x_velocity_threshold: 0.000
        min_y_velocity_threshold: 1.0
        min_theta_velocity_threshold: 0.001
        progress_checker_plugin: "progress_checker"
        goal_checker_plugin: "goal_checker"
        controller_plugins: ["FollowPath"]

        # Progress checker parameters
        progress_checker:
            plugin: "nav2_controller::SimpleProgressChecker"
            required_movement_radius: 0.5
            movement_time_allowance: 10.0
        # Goal checker parameters
        goal_checker:
            plugin: "nav2_controller::SimpleGoalChecker"
            xy_goal_tolerance: 0.25
            yaw_goal_tolerance: 0.50
            stateful: True
        # DWB parameters
        FollowPath:
            plugin: "dwb_core::DWBLocalPlanner"
            debug_trajectory_details: True
            min_vel_x: 0.0
            min_vel_y: 0.0
            max_vel_x: 1.5 # Nav2 default was 0.26
            max_vel_y: 1.0
            max_vel_theta: 1.0 # Nav2 default was 1.0
            min_speed_xy: 0.00
            max_speed_xy: 1.5
            min_speed_theta: 0.0
            # Add high threshold velocity for turtlebot 3 issue.
            # https://github.com/ROBOTIS-GIT/turtlebot3_simulations/issues/75
            min_y_velocity_threshold: 0.5
            min_theta_velocity_threshold: 0.001
            acc_lim_x: 2.5
            acc_lim_y: 0.0
            acc_lim_theta: 1.5
            decel_lim_x: -2.5
            decel_lim_y: 0.0
            decel_lim_theta: -3.2
            vx_samples: 20
            vy_samples: 5
            vtheta_samples: 20
            sim_time: 2.5
            linear_granularity: 0.05
            angular_granularity: 0.025
            transform_tolerance: 1.0
            xy_goal_tolerance: 0.25
            trans_stopped_velocity: 0.25
            short_circuit_trajectory_evaluation: True
            stateful: True
            critics:
                [
                    "RotateToGoal",
                    "Oscillation",
                    "BaseObstacle",
                    "GoalAlign",
                    "PathAlign",
                    "PathDist",
                    "GoalDist",
                ]
            BaseObstacle.scale: 0.02 # Nav2 default was 0.02
            PathAlign.scale: 24.0 # Nav2 default was 32.0
            PathAlign.forward_point_distance: 0.1
            GoalAlign.scale: 40.0 # Nav2 default was 24.0
            GoalAlign.forward_point_distance: 0.1
            PathDist.scale: 40.0 # Nav2 default was 32.0
            GoalDist.scale: 60.0 # Nav2 default was 24.0
            RotateToGoal.scale: 60.0 # Nav2 default was 32.0
            RotateToGoal.slowing_factor: 5.0
            RotateToGoal.lookahead_time: -1.0

controller_server_rclcpp_node:
    ros__parameters:
        use_sim_time: True

local_costmap:
    local_costmap:
        ros__parameters:
            update_frequency: 5.0
            publish_frequency: 2.0
            global_frame: odom
            robot_base_frame: base_footprint
            use_sim_time: True
            rolling_window: true
            width: 3
            height: 3
            origin_x: 0.0
            origin_y: 0.0
            resolution: 0.05
            robot_radius: 0.2
            plugins: ["obstacle_layer", "inflation_layer"]
            inflation_layer:
                plugin: "nav2_costmap_2d::InflationLayer"
                cost_scaling_factor: 1.0
                inflation_radius: 0.010
            obstacle_layer:
                plugin: "nav2_costmap_2d::ObstacleLayer"
                enabled: True
                observation_sources: scan
                scan:
                    topic: /scan
                    max_obstacle_height: 2.0
                    clearing: True
                    marking: True
                    data_type: "LaserScan"
            static_layer:
                map_subscribe_transient_local: True
            always_send_full_costmap: True
    local_costmap_client:
        ros__parameters:
            use_sim_time: True
    local_costmap_rclcpp_node:
        ros__parameters:
            use_sim_time: True

global_costmap:
    global_costmap:
        ros__parameters:
            update_frequency: 2.0
            publish_frequency: 2.0
            global_frame: odom
            robot_base_frame: base_footprint
            use_sim_time: True
            rolling_window: true
            width: 5
            height: 5
            origin_x: 0.0
            origin_y: 0.0
            resolution: 0.05
            robot_radius: 0.2
            plugins: ["obstacle_layer", "inflation_layer"]
            inflation_layer:
                plugin: "nav2_costmap_2d::InflationLayer"
                cost_scaling_factor: 1.0
                inflation_radius: 0.050
            obstacle_layer:
                plugin: "nav2_costmap_2d::ObstacleLayer"
                enabled: True
                observation_sources: scan
                scan:
                    topic: /scan
                    max_obstacle_height: 2.0
                    clearing: True
                    marking: True
                    data_type: "LaserScan"
            static_layer:
                map_subscribe_transient_local: True
            always_send_full_costmap: True
    global_costmap_client:
        ros__parameters:
            use_sim_time: True
    global_costmap_rclcpp_node:
        ros__parameters:
            use_sim_time: True

planner_server:
    ros__parameters:
        # The default  is 20.0 for navfn. This
        # gets rewritten by launch file anyways. It will be set to a much
        # lower value when Sampling Baser Planner is used
        expected_planner_frequency: 20.0 
        use_sim_time: True
        planner_plugins: ["GridBased"]
        # GridBased.plugin: "nav2_navfn_planner/NavfnPlanner"
        GridBased:
            plugin: "nav2_navfn_planner/NavfnPlanner"
            tolerance: 1.0 #was 0.5
            use_astar: false
            allow_unknown: true
            # plugin: nav2_straightline_planner/StraightLine # For Foxy and later
            # interpolation_resolution: 0.1 # For StraightLine planner

planner_server_rclcpp_node:
    ros__parameters:
        use_sim_time: True

recoveries_server:
    ros__parameters:
        costmap_topic: local_costmap/costmap_raw
        footprint_topic: local_costmap/published_footprint
        cycle_frequency: 10.0
        recovery_plugins: ["spin", "back_up", "wait"]
        spin:
            plugin: "nav2_recoveries/Spin"
        back_up:
            plugin: "nav2_recoveries/BackUp"
        wait:
            plugin: "nav2_recoveries/Wait"
        global_frame: odom
        robot_base_frame: base_footprint
        transform_timeout: 0.1
        use_sim_time: True
        simulate_ahead_time: 2.0
        max_rotational_vel: 1.0
        min_rotational_vel: 0.4
        rotational_acc_lim: 3.2

waypoint_follower:
    ros__parameters:
        loop_rate: 20
        stop_on_failure: false
        waypoint_task_executor_plugin: "wait_at_waypoint"
        wait_at_waypoint:
            plugin: "nav2_waypoint_follower::WaitAtWaypoint"
            enabled: true
            waypoint_pause_duration: 200